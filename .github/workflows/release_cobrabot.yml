# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# This workflow:
# - Builds the Laravel app
# - Removes any .env* files from the artifact
# - Temporarily allows the current runner's public IP on BOTH main + SCM (Kudu)
# - Ensures Public Network Access is enabled for the deploy
# - Deploys via Publish Profile
# - Sets the startup script
# - Cleans up the temporary IP rules

name: Build and deploy PHP app to Azure Web App - cobrabot

on:
    push:
        branches: [release]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read

        steps:
            - uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'

            - name: Set production environment
              run: echo "APP_ENV=production" >> $GITHUB_ENV

            - name: Check if composer.json exists
              id: check_files
              uses: andstor/file-existence-action@v1
              with:
                  files: 'composer.json'

            - name: Install PHP dependencies (no-dev) if composer.json exists
              if: steps.check_files.outputs.files_exists == 'true'
              run: |
                  composer validate --no-check-publish
                  composer install --prefer-dist --no-progress --no-interaction --no-dev

            - name: Remove any .env files before deployment
              run: |
                  find . -name ".env*" -type f -delete
                  echo "Removed any .env files"

            - name: Verify no .env files remain
              run: |
                  if find . -name ".env*" -type f | grep -q .; then
                    echo "❌ .env files still exist:"
                    find . -name ".env*" -type f
                    exit 1
                  else
                    echo "✅ No .env files found"
                  fi

            - name: Upload artifact for deployment job
              uses: actions/upload-artifact@v4
              with:
                  name: php-app
                  path: .
                  if-no-files-found: error
                  retention-days: 1

    deploy:
        runs-on: ubuntu-latest
        needs: build
        # OIDC login requires id-token permission
        permissions:
            id-token: write
            contents: read

        env:
            RG: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
            APP: ${{ secrets.AZURE_WEBAPP_NAME }}

        steps:
            - name: Download artifact from build job
              uses: actions/download-artifact@v4
              with:
                  name: php-app

            - name: Azure login (OIDC)
              uses: azure/login@v2
              with:
                  client-id: ${{ secrets.AZURE_CLIENT_ID }}
                  tenant-id: ${{ secrets.AZURE_TENANT_ID }}
                  subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

            - name: Get runner public IP
              id: ip
              run: echo "PUBLIC_IP=$(curl -s https://api.ipify.org)" >> "$GITHUB_OUTPUT"

            - name: Prepare access rules for deploy (enable PNA, split SCM rules, add IP to SCM + MAIN)
              run: |
                  set -e
                  echo "Enabling Public Network Access on $APP (if disabled)..."
                  az resource update -g "$RG" \
                    --name "$APP" \
                    --resource-type "Microsoft.Web/sites" \
                    --set properties.publicNetworkAccess=Enabled

                  echo "Ensure SCM does NOT inherit main-site rules..."
                  az webapp config access-restriction set -g "$RG" -n "$APP" \
                    --use-same-restrictions-for-scm-site false

                  IP="${{ steps.ip.outputs.PUBLIC_IP }}"
                  echo "Allowing ${IP}/32 on SCM and MAIN for $APP..."

                  # Add to SCM (Kudu)
                  az webapp config access-restriction add \
                    -g "$RG" -n "$APP" \
                    --rule-name "gh-scm-${IP}" \
                    --action Allow --ip-address "${IP}/32" \
                    --priority 120 --scm-site true

                  # Add to MAIN site (belt and suspenders)
                  az webapp config access-restriction add \
                    -g "$RG" -n "$APP" \
                    --rule-name "gh-main-${IP}" \
                    --action Allow --ip-address "${IP}/32" \
                    --priority 120

            - name: Deploy to Azure Web App
              id: deploy-to-webapp
              uses: azure/webapps-deploy@v3
              with:
                  app-name: 'cobrabot'
                  slot-name: 'Production'
                  package: .
                  publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_B408F1FA702C414EBD92E3521D98D7CE }}

            - name: Set startup command
              run: |
                  az webapp config set \
                    --name "$APP" \
                    --resource-group "$RG" \
                    --startup-file "./azure/azure-startup.sh"

            - name: Cleanup temporary IP rules
              if: always()
              run: |
                  IP="${{ steps.ip.outputs.PUBLIC_IP }}"
                  echo "Removing temporary rules for ${IP}..."
                  az webapp config access-restriction remove -g "$RG" -n "$APP" \
                    --rule-name "gh-scm-${IP}" --scm-site true || true
                  az webapp config access-restriction remove -g "$RG" -n "$APP" \
                    --rule-name "gh-main-${IP}" || true

                  # If you normally keep Public Network Access disabled, re-disable it here:
                  # az resource update -g "$RG" --name "$APP" --resource-type "Microsoft.Web/sites" \
                  #   --set properties.publicNetworkAccess=Disabled || true
